plugins {
    id "org.flywaydb.flyway" version "8.5.11"
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "org.projectlombok:lombok"
    implementation "org.projectlombok:lombok" // automatic getters, setters etc
    implementation 'org.flywaydb:flyway-core' // DB configuration management
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.postgresql:postgresql' // db driver
    compileOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3' // json parsing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "io.rest-assured:rest-assured:4.5.0" // to functional tests at REST controller
    testImplementation "org.testcontainers:testcontainers:1.17.3" // test container core stuff
    testImplementation "org.testcontainers:postgresql:1.17.3" // test container postgres module
    testImplementation "org.assertj:assertj-core:3.23.1" // fluent API for assertions
}

test {
    useJUnitPlatform()
}

task testUnit(type: Test, group: "verification") {
    useJUnitPlatform() {
        excludeTags "functional", "integration"
    }
}

task testIntegration(type: Test, group: "verification") {
    useJUnitPlatform() {
        includeTags "integration"
    }
}

task testFunctional(type: Test, group: "verification") {
    useJUnitPlatform() {
        includeTags "functional"
    }
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/'
    user = 'postgres'
    password = 'mysecretpassword'
    schemas = ['users']
}